class_css = campagne_avec_positionnement?(:litteratie) ? "litteratie" : "numeratie"
div class: "evaluation__restitution-globale #{class_css}" do
  render "deroulement_passation" unless resource.campagne.parcours_type.blank? || pdf

  if bienvenue
    render(
      Evaluation::BienvenueComponent.new(
        restitution_globale: restitution_globale, bienvenue: bienvenue
      )
    )
  end

  if prise_en_main?
    div id: "competence-numerique", class: "page adaptation-pdf" do
      render "entete_page", restitution_globale: restitution_globale

      if pdf
        h2 t(".prise_en_main.titre"), class: "text-center mt-5 mb-4 evaluation__titre"
      else
        h2 t(".prise_en_main.titre"), class: "evaluation__titre"
      end

      div class: "panel" do
        div class: "marges-page" do
          render partial: "prise_en_main"
        end

        render "pied_page"
      end
    end
  end

  if campagne_avec_competences_transversales?
    render Evaluation::CompetencesTransversalesComponent.new(
      restitution_globale: restitution_globale,
      completude_competences_transversales: completude.competences_transversales?
    )
  end

  if resource.campagne.avec_diagnostic?
    render Evaluation::SyntheseDiagnosticComponent.new(
      restitution_globale: restitution_globale,
      synthese_diagnostic: restitution_globale.synthese_diagnostic,
      mes_avec_redaction_de_notes: mes_avec_redaction_de_notes,
      niveau_cnef: resource.niveau_cnef,
      niveau_cefr: resource.niveau_cefr,
      completude_competences_de_base: completude.competences_de_base?
    )
  end

  if resource.campagne.avec_diagnostic?
    render partial: "correspondance_anlci",
           locals: {
             restitution_globale: restitution_globale,
             pdf: pdf
           }
  end

  if campagne_avec_positionnement?(:litteratie)
    div id: "litteratie", class: "page page-litteratie adaptation-pdf" do
      render "entete_page", restitution_globale: restitution_globale

      if pdf
        h2 t("titre", scope: "admin.restitutions.litteratie"),
           class: "text-center mt-5 mb-4 evaluation__titre"
      else
        h2 t("titre", scope: "admin.restitutions.litteratie"), class: "evaluation__titre"
      end

      render Evaluation::AlertIncompleteComponent.new unless cafe_de_la_place&.complete?

      render partial: "litteratie",
             locals: {
               synthese: restitution_globale.synthese_positionnement_litteratie,
               pdf: pdf
             }
      render "pied_page", pre_pied_page: ReferentielAnlciComponent.new unless pdf
    end
  end

  if campagne_avec_positionnement?(:numeratie)
    render(
      Evaluation::NumeratieComponent.new(
        restitution_globale: restitution_globale, place_du_marche: place_du_marche
      )
    )
  end

  diag_risques_entreprise = restitution_globale.diag_risques_entreprise
  pourcentage_risque = nil
  if diag_risques_entreprise
    pourcentage_risque = diag_risques_entreprise.partie.synthese["pourcentage_risque"]
    if pourcentage_risque
      render(
        partial: "mesure_des_risques",
        locals: { pourcentage_risque: pourcentage_risque, pdf: pdf }
      )
    end
  end

  if pourcentage_risque
    evaluation_impact_general = restitution_globale.evaluation_impact_general
    render(
      partial: "mesure_des_impacts",
      locals: { evaluation_impact_general: evaluation_impact_general, pdf: pdf }
    )
  end

  render Evaluation::AnnexeDiagnosticComponent.new(
    nom_beneficiaire: restitution_globale.beneficiaire,
    code_beneficiaire: restitution_globale.code_beneficiaire,
    date: restitution_globale.date,
    structure: restitution_globale.structure
  ) if pdf && resource.campagne.avec_diagnostic?

  render Evaluation::AnnexePositionnementComponent.new(
    nom_beneficiaire: restitution_globale.beneficiaire,
    code_beneficiaire: restitution_globale.code_beneficiaire,
    date: restitution_globale.date,
    structure: restitution_globale.structure
  ) if pdf && (
    campagne_avec_positionnement?(:litteratie) || campagne_avec_positionnement?(:numeratie)
  )
end
