# frozen_string_literal: true

if f.object.new_record?
  f.object.transcriptions.build

  render partial: 'admin/transcriptions/input_ecrit_audio',
         locals: { f: f, transcription_categorie: :intitule }
  render partial: 'admin/transcriptions/input_ecrit_audio',
         locals: { f: f, transcription_categorie: :modalite_reponse }
else
  f.object.transcriptions.build(categorie: :intitule) if f.object.transcription_intitule.nil?
  f.has_many :transcriptions, allow_destroy: false, new_record: false, heading: false do |t|
    if t.object.intitule?
      t.input :id, as: :hidden
      t.input :ecrit, label: t('.label.intitule'), input_html: { rows: 4 }
      t.input :audio, as: :file, label: 'Intitul√© audio',
                      input_html: { accept: Transcription::AUDIOS_CONTENT_TYPES.join(',') }
      t.input :categorie, as: :hidden, input_html: { value: :intitule }
    end
  end
  if f.object.transcription_intitule&.audio&.attached?
    f.input :supprimer_audio_intitule, as: :boolean,
                                       label: t('.label.supprimer_audio_intitule'),
                                       hint: tag_audio(f.object.transcription_intitule)
  end
  if f.object.transcription_modalite_reponse.nil?
    f.object.transcriptions.build(categorie: :modalite_reponse)
  end
  f.has_many :transcriptions, allow_destroy: false, new_record: false, heading: false do |t|
    if t.object.modalite_reponse?
      t.input :id, as: :hidden
      t.input :ecrit, label: t('.label.modalite_reponse'), input_html: { rows: 4 }
      t.input :audio, as: :file, label: t('.label.modalite_reponse_audio'),
                      input_html: { accept: Transcription::AUDIOS_CONTENT_TYPES.join(',') }
      t.input :categorie, as: :hidden, input_html: { value: :modalite_reponse }
    end
  end
  if f.object.transcription_modalite_reponse&.audio&.attached?
    f.input :supprimer_audio_modalite_reponse,
            as: :boolean,
            label: t('.label.supprimer_audio_modalite'),
            hint: tag_audio(f.object.transcription_modalite_reponse)
  end
end
