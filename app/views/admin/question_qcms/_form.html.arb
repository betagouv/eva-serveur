# frozen_string_literal: true

active_admin_form_for [:admin, resource], html: { class: 'form-question' } do |f|
  f.inputs do
    f.input :libelle
    f.input :categorie, as: :select
    f.input :nom_technique, placeholder: t('.nom_technique_placeholder')
    f.input :metacompetence
    f.input :type_qcm
    f.input :description
  end

  f.object.transcriptions.build if f.object.transcriptions.empty?

  f.inputs do
    f.has_many :transcriptions, allow_destroy: false, new_record: false, heading: false do |t|
      t.input :id, as: :hidden
      t.input :ecrit, label: t('.label.intitule')
      t.input :audio, as: :file, label: 'IntitulÃ© audio', input_html: { accept: 'audio/*' }
    end
    f.has_many :transcriptions, allow_destroy: false, new_record: false, heading: false do |t|
      t.input :id, as: :hidden
      t.input :ecrit, label: t('.label.modalite_reponse')
      t.input :audio, as: :file, label: t('.label.modalite_reponse_audio'),
                      input_html: { accept: 'audio/*' }
      t.input :categorie, as: :hidden, input_html: { value: :modalite_reponse }
    end
    f.has_many :choix, allow_destroy: ->(choix) { can? :destroy, choix } do |c|
      c.input :id, as: :hidden
      c.input :intitule, label: t('.label.intitule_reponse')
      c.input :audio, as: :file, label: t('.label.intitule_reponse_audio'),
                      input_html: { accept: 'audio/*' }
      c.input :nom_technique
      c.input :type_choix
    end
  end

  f.actions do
    f.action :submit
    annulation_formulaire(f)
  end
end
