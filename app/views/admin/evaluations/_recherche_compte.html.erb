<button class="bouton-secondaire petit-bouton bouton-icone-plus"><%= t(".#{locals[:translation_scope]}.action") %></button>
<%= form_with id: locals[:form_id], url: locals[:form_url], class: "hidden" do |f| %>
    <label class="sr-only" for="<%= locals[:autocomplete_id] %>"><%= t(".#{locals[:translation_scope]}.libelle_champ_recherche") %></label>
  <div id="<%= locals[:container_id] %>" class="champ-recherche" ></div>
  <%= f.hidden_field locals[:hidden_field_name] %>
<% end %>

<script>
document.addEventListener('DOMContentLoaded', () => {
  const boutonAjout = $("#<%= locals[:sidebar_section_id] %> button" );
  const formulaireRecherche = $("#<%= locals[:form_id] %>" );

  const comptes = [<% locals[:comptes_collection].each do |compte| %>
    { nom: "<%= escape_javascript(compte.display_name.html_safe) %>", identifiant: "<%= compte.id %>" },
  <% end %>];

  afficheRecherche(boutonAjout, formulaireRecherche, () => {
      const container = document.querySelector('#<%= locals[:container_id] %>');
      initialiseAutocomplete({
        focus: true,
        element: container,
        id: '<%= locals[:autocomplete_id] %>',
        name: '<%= locals[:autocomplete_name] %>',
        placeholder: I18n.t('admin.evaluations.recherche_compte.<%= locals[:translation_scope] %>.placeholder'),
        source: (requete, reponse) => {
            const term = requete.toLowerCase();
            reponse(comptes.filter(compte => compte.nom.toLowerCase().includes(term)));
        },
        templates: {
          inputValue: (reponse) => reponse ? reponse.nom : '',
          suggestion: (reponse) => reponse.nom
        },
        onConfirm: (selectedItem) => {
          if (! selectedItem) return;

          $('#<%= locals[:hidden_field_name] %>').val(selectedItem.identifiant);
          $('#<%= locals[:form_id] %>').submit();
        }
      })
  });
});
</script>
