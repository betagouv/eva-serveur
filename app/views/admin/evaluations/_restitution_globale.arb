# frozen_string_literal: true

niveaux_competences = restitution_globale.niveaux_competences
titre_avec_aide_illettrisme = 'titre--avec-aide-illettrisme' if resource.illettrisme_potentiel?

div class: 'evaluation__restitution-globale' do
  render 'deroulement_passation' unless resource.campagne.parcours_type.blank? || pdf

  if prise_en_main? && !pdf
    div id: 'competence-numerique', class: 'page' do
      render 'entete_page', restitution_globale: restitution_globale

      if pdf
        h2 t('.prise_en_main_titre'), class: 'text-center mt-5 mb-4'
      else
        h2 t('.prise_en_main_titre')
      end

      div class: 'panel' do
        div class: 'marges-page' do
          render partial: 'prise_en_main'
        end

        render 'pied_page'
      end
    end
  end

  if bienvenue
    if pdf
      div id: 'auto_positionnement' do
        div class: 'page' do
          render 'entete_page', restitution_globale: restitution_globale

          h2 t('.autopositionnement_titre'), class: 'text-center mt-5 mb-4'

          div class: 'panel' do
            div class: 'marges-page' do
              render partial: 'questions_reponses_autopositionnement',
                     locals: { bienvenue: bienvenue }
            end

            render 'pied_page'
          end
        end
        div class: 'page' do
          render 'entete_page', restitution_globale: restitution_globale

          div class: 'panel' do
            div class: 'marges-page' do
              render partial: 'questionnaire_autopositionnement',
                     locals: { auto_positionnement: bienvenue }
            end

            render 'pied_page'
          end
        end
      end
    else
      div id: 'auto_positionnement', class: 'page' do
        render 'entete_page', restitution_globale: restitution_globale

        h2 t('.autopositionnement_titre')

        div class: 'panel' do
          div class: 'marges-page' do
            render partial: 'questions_reponses_autopositionnement',
                   locals: { bienvenue: bienvenue }
            render partial: 'questionnaire_autopositionnement',
                   locals: { auto_positionnement: bienvenue }
          end

          render 'pied_page'
        end
      end
    end
  end

  if campagne_avec_competences_transversales?
    render 'competences_transversales', pdf: pdf, restitution_globale: restitution_globale
  end

  if resource.campagne.avec_pre_positionnement?
    if pdf
      div class: 'page' do
        render 'entete_page', restitution_globale: restitution_globale

        h2 t('titre', scope: 'admin.restitutions.cefr'), class: 'text-center mt-5 mb-4'

        div class: 'panel' do
          render 'francais_mathematique', pdf: pdf,
                                          synthese: restitution_globale.synthese_pre_positionnement
        end

        render 'pied_page', pre_pied_page: 'referentiel_anlci'
      end

      if mes_avec_redaction_de_notes.present?
        div class: 'page' do
          render 'entete_page', restitution_globale: restitution_globale

          render 'communication_ecrite', restitution_globale: restitution_globale, pdf: pdf

          render 'pied_page'
        end
      end
    else
      div id: 'francais_mathematiques', class: 'page' do
        h2 t('titre', scope: 'admin.restitutions.cefr'), class: titre_avec_aide_illettrisme.to_s

        div class: 'panel panel--avec-references' do
          render 'francais_mathematique', pdf: pdf,
                                          synthese: restitution_globale.synthese_pre_positionnement

          render 'communication_ecrite', restitution_globale: restitution_globale, pdf: pdf

          render 'referentiel_anlci'
        end
      end
    end
  end

  if resource.campagne.avec_pre_positionnement?
    render partial: 'correspondance_anlci',
           locals: {
             restitution_globale: restitution_globale,
             pdf: pdf
           }
  end

  if campagne_avec_positionnement?
    div id: 'lettrisme', class: 'page page-lettrisme' do
      render 'entete_page', restitution_globale: restitution_globale

      if pdf
        h2 t('titre', scope: 'admin.restitutions.lettrisme'), class: 'text-center mt-5 mb-4'
      else
        h2 t('titre', scope: 'admin.restitutions.lettrisme'),
           class: titre_avec_aide_illettrisme.to_s
      end

      render partial: 'lettrisme',
             locals: {
               synthese: restitution_globale.synthese_positionnement,
               pdf: pdf
             }
      render 'pied_page', pre_pied_page: ReferentielAnlciComponent.new('officiel')
    end
  end
end

if can?(:manage, Compte) && resource.campagne.avec_pre_positionnement? && !pdf
  div class: 'evaluation__scores panel' do
    tabs do
      tab 'Scores litteratie et numératie' do
        scores_niveau1 = restitution_globale.scores_niveau1.calcule
        moyennes = restitution_globale.niveau1_moyennes_metriques
        ecarts_types = restitution_globale.niveau1_ecarts_types_metriques
        scores_niveau1_standardises = restitution_globale.scores_niveau1_standardises.calcule
        attributes_table_for [
          [t('admin.restitutions.restitution_colonnes.valeur_utilisateur'), scores_niveau1],
          [t('admin.restitutions.restitution_colonnes.moyenne'), moyennes],
          [t('admin.restitutions.restitution_colonnes.ecart_type'), ecarts_types],
          [t('admin.restitutions.restitution_colonnes.cote_z'), scores_niveau1_standardises]
        ] do
          row do |(titre, _)|
            strong titre
          end
          scores_niveau1.each_key do |nom_metrique|
            row(nom_metrique) do |(_, valeur_colonne)|
              valeur_colonne[nom_metrique]&.round(2)
            end
          end
        end
      end

      tab 'Scores meta-compétences' do
        scores_niveau2 = restitution_globale.scores_niveau2.calcule
        moyennes = restitution_globale.niveau2_moyennes_metriques
        ecarts_types = restitution_globale.niveau2_ecarts_types_metriques
        scores_niveau2_standardises = restitution_globale.scores_niveau2_standardises.calcule
        attributes_table_for [
          [t('admin.restitutions.restitution_colonnes.valeur_utilisateur'), scores_niveau2],
          [t('admin.restitutions.restitution_colonnes.moyenne'), moyennes],
          [t('admin.restitutions.restitution_colonnes.ecart_type'), ecarts_types],
          [t('admin.restitutions.restitution_colonnes.cote_z'), scores_niveau2_standardises]
        ] do
          row do |(titre, _)|
            strong titre
          end
          Restitution::ScoresNiveau2::METRIQUES_ILLETTRISME.each do |nom_metrique|
            row(nom_metrique) do |(_, valeur_colonne)|
              valeur_colonne[nom_metrique]&.round(2)
            end
          end
        end
      end

      tab 'Niveaux compétences transversales' do
        ol do
          niveaux_competences.each do |competence, niveau|
            li span t("#{competence}.nom",
                      scope: 'admin.evaluations.restitution_competence') +
                    ": #{niveau}"
          end
        end
      end
    end
  end
end
