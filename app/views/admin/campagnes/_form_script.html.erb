<script>
function affichePrePositionnement() {
  $('.positionnement').addClass('hidden');
  $prepositionnement = $('.pre-positionnement');
  $prepositionnement.removeClass('hidden');
  $prepositionnement.find('.choix-item:first').trigger('focus');
}

function affichePositionnement() {
  $('.pre-positionnement').addClass('hidden');
  $positionnement = $('.positionnement');
  $positionnement.removeClass('hidden');
  $positionnement.find('.choix-item:first').trigger('focus');
}

function reinitialiseSelection(inputClass) {
  $(".input-choix-option-personnalisation input").prop("checked", false );
  if (inputClass == 'input-choix-type-programme') {
    $(".input-choix-option-parcours-type input").prop("checked", false );
    $('#zone-de-personnalisation').addClass('hidden');
  }
}

function afficheZone(choix_selection, zoneAAfficher) {
  let $zone = $(`#${zoneAAfficher}`)
  $zone.removeClass('hidden');
  const option_redaction = $("#campagne_options_personnalisation_redaction").parent();
  switch (choix_selection) {
    case "campagne_type_programme_positionnement":
      affichePositionnement()
      break;
    case "campagne_type_programme_pre_positionnement":
      affichePrePositionnement()
      break;
    <% ParcoursType.includes(:situations_configurations, situations_configurations: :situation).all.each do |parcours_type| %>
    case "campagne_parcours_type_id_<%= parcours_type.id%>":
      <% if parcours_type.option_redaction? %>
        option_redaction.removeClass('hidden');
      <% else %>
        option_redaction.addClass('hidden');
      <% end %>
      $zone.find('.choix-item:first').trigger('focus');
      break;
    <% end %>
  }
}

function enregistreSelectionListener(choix, zoneAAfficher ) {
  $(`.${choix}`).on('click', function (e, id_selection_clavier) {
    let id = e.target.id || id_selection_clavier;
    if (id) {
      reinitialiseSelection(choix);
      afficheZone(id, zoneAAfficher)
      $('html, body').animate({
        scrollTop: $(`#${zoneAAfficher}`).offset().top
      }, 300);
    }
  })
}

document.addEventListener('DOMContentLoaded', () => {
  $('.choix-item').on('keyup', function(event) {
    if (event.keyCode == 13) {
      let $label = $(this).parent();
      let id = $label.find('input').attr('id');
      $label.trigger('click', id);
    }
  });
  enregistreSelectionListener('input-choix-type-programme', 'zone-choix-parcours')
  enregistreSelectionListener('input-choix-option-parcours-type', 'zone-de-personnalisation')
});
</script>
