# frozen_string_literal: true

render 'form_script'
div class: 'nouvelle-campagne' do
  div class: 'row' do
    div class: 'offset-1 col-4' do
      titre = resource.new_record? ? 'new' : 'edit'
      h1 t("active_admin.resources.campagne.#{titre}_model")
      div class: 'panel' do
        div class: 'panel__description' do
          md t('.explication_campagne')
        end
      end

      active_admin_form_for [:admin, resource] do |f|
        f.semantic_errors
        h2 t('.titre_libelle')
        div class: 'panel' do
          f.inputs do
            f.input :libelle
          end
        end

        if resource.new_record?
          h2 'Programme'
          div id: 'zone-choix-type-programme' do
            div class: 'panel' do
              h3 t('.choix_type_programme')
              f.inputs class: 'input-choix input-choix-type-programme' do
                f.input :types_programme,
                        as: :radio,
                        collection: collection_types_programme,
                        label: false
              end
            end
          end

          div id: 'zone-choix-parcours',
              class: f.object.parcours_type_id.present? ? '' : 'hidden' do
            div class: 'panel' do
              h3 t('.choix_parcours')
              div class: 'panel__description description--secondaire' do
                md t('.explication_choix_programme')
              end

              div class: 'pre-positionnement' do
                f.inputs class: 'input-choix input-choix-option-parcours-type' do
                  collection = collection_parcours_type(parcours_type.pre_positionnement)
                  f.input :parcours_type, as: :radio,
                                          collection: collection,
                                          required: true,
                                          label: false
                end
              end

              div class: 'positionnement' do
                f.inputs class: 'input-choix input-choix-option-parcours-type' do
                  collection = collection_parcours_type(parcours_type.positionnement)
                  f.input :parcours_type, as: :radio,
                                          collection: collection,
                                          required: true,
                                          label: false
                end
              end
            end
          end

          div id: 'zone-de-personnalisation',
              class: f.object.parcours_type_id.present? ? '' : 'hidden' do
            h2 t('.personnalisation')
            div class: 'panel' do
              para t('.explication_personnalisation'),
                   class: 'panel__description description--secondaire'
              f.inputs class: 'input-choix input-choix-option-personnalisation' do
                f.input :options_personnalisation,
                        as: :check_boxes,
                        collection: collection_options_personnalisation,
                        label: false
              end
            end
          end
        end

        if current_compte.superadmin?
          div class: 'panel' do
            h2 t('.configuration_avancee')
            f.inputs do
              f.input :compte
              f.input :code
              f.input :affiche_competences_fortes
              f.input :questionnaire
              if resource.persisted?
                render partial: 'admin/situations_configurations/input_situations_configurations',
                       locals: { f: f }
              end
            end
          end
        end

        f.actions do
          annulation_formulaire(f)
          f.action :submit
        end
      end
    end
  end
end
