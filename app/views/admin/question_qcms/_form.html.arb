# frozen_string_literal: true

active_admin_form_for [:admin, resource] do |f|
  f.inputs do
    f.input :libelle
    f.input :categorie, as: :select
    f.input :nom_technique, placeholder: t('.nom_technique_placeholder')
    f.input :metacompetence
    f.input :type_qcm
    f.input :description
    f.input :illustration, as: :file,
                           input_html: { accept: Question::ILLUSTRATION_CONTENT_TYPES.join(',') },
                           hint: 'La taille de l’image rendue est de 1008x566.'
  end

  f.inputs do
    if f.object.new_record?
      f.object.transcriptions.build

      f.has_many :transcriptions, allow_destroy: false, new_record: false, heading: false do |t|
        t.input :id, as: :hidden
        t.input :ecrit, label: t('.label.intitule')
        t.input :audio, as: :file, label: t('.label.intitule_audio'),
                        input_html: { accept: 'audio/*' }
      end
      f.has_many :transcriptions, allow_destroy: false, new_record: false, heading: false do |t|
        t.input :id, as: :hidden
        t.input :ecrit, label: t('.label.modalite_reponse')
        t.input :audio, as: :file, label: t('.label.modalite_reponse_audio'),
                        input_html: { accept: 'audio/*' }
        t.input :categorie, as: :hidden, input_html: { value: :modalite_reponse }
      end
    else
      if f.object.transcription_pour(:intitule).nil?
        f.object.transcriptions.build(categorie: :intitule)
      end
      f.has_many :transcriptions, allow_destroy: false, new_record: false, heading: false do |t|
        if t.object.intitule?
          t.input :id, as: :hidden
          t.input :ecrit, label: t('.label.intitule')
          t.input :audio, as: :file, label: 'Intitulé audio', input_html: { accept: 'audio/*' }
          t.input :categorie, as: :hidden, input_html: { value: :intitule }
        end
      end
      if f.object.transcription_pour(:modalite_reponse).nil?
        f.object.transcriptions.build(categorie: :modalite_reponse)
      end
      f.has_many :transcriptions, allow_destroy: false, new_record: false, heading: false do |t|
        if t.object.modalite_reponse?
          t.input :id, as: :hidden
          t.input :ecrit, label: t('.label.modalite_reponse')
          t.input :audio, as: :file, label: t('.label.modalite_reponse_audio'),
                          input_html: { accept: 'audio/*' }
          t.input :categorie, as: :hidden, input_html: { value: :modalite_reponse }
        end
      end
    end
    f.has_many :choix, allow_destroy: ->(choix) { can? :destroy, choix } do |c|
      c.input :id, as: :hidden
      c.input :intitule, label: t('.label.intitule_reponse')
      c.input :audio, as: :file, label: t('.label.intitule_reponse_audio'),
                      input_html: { accept: 'audio/*' }
      c.input :nom_technique
      c.input :type_choix
    end
  end
  f.actions do
    f.action :submit
    annulation_formulaire(f)
  end
end
