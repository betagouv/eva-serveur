# frozen_string_literal: true

div class: "page-beneficiaire" do
  div class: "row" do
    div class: "offset-2 col-8" do
      h2 render NomAnonymisableComponent.new(beneficiaire)
      div class: "panel" do
        t(".info")
      end
    end
  end

  render CartePartageCodeComponent.new(
    libelle_code: Beneficiaire.human_attribute_name("code_personnel"),
    code: beneficiaire.code_personnel,
    url: url_beneficiaire(beneficiaire.code_personnel),
    description: I18n.t("admin.beneficiaires.show.carte_partage_code.description")
  )

  if beneficiaire.evaluations_diagnostic.present?
    render partial: "admin/beneficiaires/liste_evaluations_diagnostic",
locals: { beneficiaire: beneficiaire }
  end

  if beneficiaire.evaluations.present?
    order_param = (params[:order] || "created_at_desc").gsub("_asc", " asc").gsub(
      "_desc", " desc"
    )
    paginated_collection(beneficiaire.evaluations.order(order_param).page(params[:page]).per(15),
                        download_links: false) do
      table_for collection, sortable: true, class: "index_table",
id: "index_table_evaluations_beneficiaire" do
        column(:nom) do |evaluation|
          render partial: "/admin/evaluations/nom_evaluation", locals: { evaluation: evaluation }
        end
        column :campagne do |evaluation|
          campagne = evaluation.campagne
          div class: "cellule" do
            div link_to(campagne.display_name, admin_campagne_path(campagne),
                        class: "evaluation__campagne"),
                class: "d-flex align-items-center"
            parcours_type = campagne.parcours_type
            div parcours_type.type_de_programme.capitalize,
class: "evaluation__parcours-type" if parcours_type.present?
          end
        end
        column :created_at do |evaluation|
          render partial: "/admin/evaluations/actions_et_date_creation",
locals: { evaluation: evaluation }
        end
      end
    end
  end
end
