render "form_script"

mode = resource.new_record? ? "new" : "edit"
div class: "nouvelle-campagne" do
  div class: "row" do
    div class: "offset-1 col-4" do
      h1 t("active_admin.resources.campagne.#{mode}_model")
      div class: "panel" do
        div class: "panel__description" do
          md t(".explication_campagne")
        end
      end

      active_admin_form_for [ :admin, resource ] do |f|
        f.semantic_errors
        if mode == "new"
          h2 "Programme"
          div id: "zone-choix-type-programme" do
            div class: "panel" do
              f.inputs class: "input-choix input-choix-type-programme",
                       name: t(".choix_type_programme") do
                f.input :type_programme,
                        as: :radio,
                        collection: collection_types_programme,
                        label: false
              end
            end
          end

          div id: "zone-choix-parcours",
              class: f.object.type_programme.present? ? "" : "hidden" do
            div class: "panel" do
              types_programmes = ParcoursType.types_programmes_eva
              types_programmes.each do |type_programme|
                classes_type_programme = type_programme.to_s
                if f.object.type_programme != type_programme.to_s
                  classes_type_programme += " hidden"
                end
                div class: classes_type_programme do
                  f.inputs class: "input-choix input-choix-option-parcours-type",
                           name: t(".choix_parcours") do
                    div class: "panel__description description--secondaire" do
                      md t(".explication_choix_programme")
                    end
                    collection = collection_parcours_type(parcours_type.send(type_programme))
                    f.input :parcours_type, as: :radio,
                                            collection: collection,
                                            required: true,
                                            label: false
                  end
                end
              end
            end
          end

          div id: "zone-de-personnalisation",
              class: f.object.parcours_type_id.present? ? "" : "hidden" do
            h2 t(".personnalisation")
            div class: "panel" do
              f.inputs class: "input-choix input-choix-option-personnalisation" do
                para t(".explication_personnalisation"),
                     class: "panel__description description--secondaire"
                f.input :options_personnalisation,
                        as: :check_boxes,
                        collection: collection_options_personnalisation,
                        label: false
              end
            end
          end
        end

        h2 t(".titre_libelle")
        div class: "panel" do
          div class: "panel__description description--secondaire" do
            md t(".explication_libelle")
          end
          f.inputs do
            f.input :libelle
          end
        end

        if current_compte.admin? && mode == "edit"
          h2 t(".titre_compte")
          div class: "panel" do
            f.inputs do
              f.input :compte, collection: comptes_structure
            end
          end
        end

        if current_compte.superadmin?
          h2 t(".configuration_avancee")
          div class: "panel" do
            f.inputs do
              f.input :compte
              f.input :code
              f.input :affiche_competences_fortes
              if resource.persisted?
                render partial: "admin/situations_configurations/input_situations_configurations",
                       locals: { f: f }
              end
            end
          end
        end

        f.actions do
          annulation_formulaire(f)
          f.action :submit
        end
      end
    end
  end
end
