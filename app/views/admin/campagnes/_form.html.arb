# frozen_string_literal: true

div class: 'nouvelle-campagne' do
  div class: 'row' do
    div class: 'offset-1 col-4' do
      titre = resource.new_record? ? 'new' : 'edit'
      h1 t("active_admin.resources.campagne.#{titre}_model")
      div class: 'panel description' do
        md t('.explication_campagne')
      end

      active_admin_form_for [:admin, resource] do |f|
        f.semantic_errors
        h2 t('.titre_libelle')
        div class: 'panel' do
          f.inputs do
            f.input :libelle
          end
        end

        if resource.new_record?
          h2 t('.parcours')
          div class: 'panel' do
            h2 t('.choix_parcours')
            para t('.explication_choix_parcours'), class: 'description description--secondaire'
            f.inputs class: 'input-choix input-choix-option-parcours_type' do
              f.input :parcours_type, as: :radio,
                                      collection: collection_parcours_type(parcours_type),
                                      required: true,
                                      label: false
            end
          end
          if resource.new_record?
            div id: 'zone-de-personnalisation',
                class: f.object.parcours_type_id.present? ? 'panel' : 'panel hidden' do
              h2 t('.personnalisation')
              para t('.explication_personnalisation'),
                   class: 'description description--secondaire'
              f.inputs class: 'input-choix input-choix-option-personnalisation' do
                f.input :options_personnalisation,
                        as: :check_boxes,
                        collection: collection_options_personnalisation,
                        label: false
              end
            end
          end
        end

        if current_compte.superadmin?
          div class: 'panel' do
            h2 t('.configuration_avancee')
            f.inputs do
              f.input :compte
              f.input :code
              f.input :affiche_competences_fortes
              f.input :questionnaire
              if resource.persisted?
                render partial: 'admin/situations_configurations/input_situations_configurations',
                       locals: { f: f }
              end
            end
          end
        end

        f.actions do
          annulation_formulaire(f)
          f.action :submit
        end
      end
    end
  end
end
